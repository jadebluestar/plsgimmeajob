class Solution:
    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:
        res = []
        top, bottom  = 0, len(matrix)-1
        left, right = 0, len(matrix[0])-1

        while top <= bottom and left <= right:

            # we are in the top row moving from left to right
            for i in range(left, right + 1):
                res.append(matrix[top][i])
            top += 1 # move to the next row

            # we are in last col, we have to move from top to bottom
            for i in range(top, bottom + 1): # doing +1 because in .py the 2nd range is not considerd
                res.append(matrix[i][right])
            right -= 1 # once we move top -> down in one row then we will have to do the same for the next col so we have to move <-
         
            if top <= bottom  and left <= right: # ensures that at least one unvisted row and column is remaining
        
                # now we have to move from left to right on the bottom row
                for i in range(right, left -1, -1):
                    res.append(matrix[bottom][i])
                bottom -= 1 # then we will move on top

                for i in range(bottom, top - 1, -1):
                    res.append(matrix[i][left])
                left += 1

        return res
