class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        res = []
        nums.sort()
        n = len(nums)
        

        for i in range(n):
            # i - 1 cause we need to check for duplicates, like what if the back ele is the same
            if i > 0 and nums[i] == nums[i-1]:
            # index of i will always be greater than 0
                continue
            # l will be the ele after i
            l = i + 1
            r = n - 1

            while l < r: # this confirm that the left pointer has not crossed the right
                total = nums[i] + nums[l] + nums[r]

                if total < 0:
                    l += 1
                elif total > 0:
                    r -= 1
                else:
                    res.append([nums[i], nums[l], nums[r]])
                    l += 1
                    r -= 1

                    while l < r and nums[l] == nums[l-1]:
                        l += 1
            
        return res
