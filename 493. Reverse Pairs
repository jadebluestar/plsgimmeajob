from typing import List

class Solution:
    def reversePairs(self, nums: List[int]) -> int:
        """
        Problem: Count the number of reverse pairs (i, j) such that:
                 i < j AND nums[i] > 2 * nums[j]
        Approach: Modified Merge Sort (Divide & Conquer)
        Time Complexity: O(n log n)
        """

        def mergeSort(start: int, end: int) -> int:
            # Base case: if subarray has 0 or 1 element → no pairs possible
            if start >= end:
                return 0

            # 1️⃣ Divide: Find middle point
            mid = (start + end) // 2

            # Recursively sort & count in both halves
            count = mergeSort(start, mid) + mergeSort(mid + 1, end)

            # 2️⃣ Count cross pairs between left half and right half
            j = mid + 1  # Pointer for right half
            for i in range(start, mid + 1):  # Loop through left half
                # Move `j` forward until condition fails
                while j <= end and nums[i] > 2 * nums[j]:
                    j += 1
                # All elements from mid+1 to j-1 in right half
                # form a reverse pair with nums[i]
                count += (j - (mid + 1))

            # 3️⃣ Merge the two sorted halves
            p, q = start, mid + 1  # p for left, q for right
            temp = []

            # Merge while both halves have elements
            while p <= mid and q <= end:
                if nums[p] <= nums[q]:
                    temp.append(nums[p])
                    p += 1
                else:
                    temp.append(nums[q])
                    q += 1

            # Append leftover elements (if any) from left half
            while p <= mid:
                temp.append(nums[p])
                p += 1

            # Append leftover elements (if any) from right half
            while q <= end:
                temp.append(nums[q])
                q += 1

            # Copy the merged result back to original array
            nums[start:end + 1] = temp

            # Return total reverse pairs count for this segment
            return count

        # Call merge sort on the full array
        return mergeSort(0, len(nums) - 1)
